_schema-version: "3.1"
ID: RiskManagement
description: A simple CAP project.
version: 1.0.0
modules:
- name: RiskManagement-RiskManagement.Risks
  type: html5
  path: app/RiskManagement.Risks
  build-parameters:
    _artifactName: RiskManagementRisks.zip
    build-result: dist-zip
    builder: custom
    commands:
    - rm -rf dist-zip dist
    - npx -p @ui5/cli@^3.0.0 ui5 build --dest dist --include-task=generateManifestBundle
      --include-task=generateCachebusterInfo
    - mkdir dist-zip
    - bash -c "cd dist && npx bestzip ../dist-zip/RiskManagementRisks.zip *"
    supported-platforms: []
- name: RiskManagement-db-deployer
  type: hdb
  path: gen/db
  requires:
  - name: RiskManagement-service-uaa
  - name: RiskManagement-service-db
  - name: RiskManagement-db
  parameters:
    buildpack: nodejs_buildpack
  build-parameters:
    builder: npm
    ignore:
    - node_modules
    - package-lock.json
- name: RiskManagement-srv
  type: nodejs
  path: gen/srv
  requires:
  - name: RiskManagement-service-uaa
  - name: RiskManagement-service-db
  - name: RiskManagement-service-destination
  - name: RiskManagement-service-metadata
  - name: RiskManagement-service-connectivity
  - name: RiskManagement-service-logs
  - name: RiskManagement-db
  provides:
  - name: srv-api
    properties:
      srv-url: ${default-url}
  parameters:
    memory: 256MB
  build-parameters:
    builder: npm
    ignore:
    - node_modules
    - package-lock.json
- name: RiskManagement-aux-destinations
  type: com.sap.application.content
  requires:
  - name: RiskManagement-service-uaa
    parameters:
      service-key:
        name: RiskManagement-uaa-key
  - name: srv-api
  - name: RiskManagement-service-html5-apps-repo-host
    parameters:
      service-key:
        name: RiskManagement-html5-apps-repo-host-key
  - name: RiskManagement-service-destination
    parameters:
      content-target: true
  parameters:
    content:
      subaccount:
        destinations:
        - Authentication: OAuth2UserTokenExchange
          Name: RiskManagement-service-uaa
          ServiceInstanceName: RiskManagement-uaa
          ServiceKeyName: RiskManagement-uaa-key
          sap.cloud.service: lcap.RiskManagement
        - Authentication: OAuth2UserTokenExchange
          Name: RiskManagement-app-srv
          TokenServiceInstanceName: RiskManagement-uaa
          TokenServiceKeyName: RiskManagement-uaa-key
          URL: ~{srv-api/srv-url}
          sap.cloud.service: lcap.RiskManagement
        - Name: RiskManagement-service-html5-apps-repo-host
          ServiceInstanceName: RiskManagement-html5-apps-repo-host
          ServiceKeyName: RiskManagement-html5-apps-repo-host-key
          sap.cloud.service: lcap.RiskManagement
        - AppgyverEnabled: false
          Authentication: OAuth2UserTokenExchange
          HTML5.DynamicDestination: false
          MobileEnabled: false
          Name: RiskManagement-RiskManagementService
          TokenServiceInstanceName: RiskManagement-uaa
          TokenServiceKeyName: RiskManagement-uaa-key
          URL: ~{srv-api/srv-url}/service/RiskManagement
          WebIDEEnabled: false
          sap.applicationdevelopment.actions.enabled: false
          sap.build.usage: CAP
          sap.cloud.service: lcap.RiskManagement
          sap.processautomation.enabled: false
        existing_destinations_policy: update
  build-parameters:
    no-source: true
- name: RiskManagement-launchpad
  type: html5
  path: build/launchpad
  build-parameters:
    _artifactName: launchpad.zip
    build-result: ../../build/dist
    builder: custom
    commands:
    - npm install
    - npx -p @ui5/cli@^3.0.0 ui5 build --dest dist --include-task=generateManifestBundle
      --include-task=generateCachebusterInfo
    - bash -c "cd dist && npx bestzip ../../../build/dist/launchpad.zip *"
    - rm -rf dist
    supported-platforms: []
- name: RiskManagement-aux-ui-deployer
  type: com.sap.application.content
  path: build/ui-deployer
  requires:
  - name: RiskManagement-service-html5-apps-repo-host
    parameters:
      content-target: true
  build-parameters:
    build-result: resources
    requires:
    - artifacts:
      - RiskManagementRisks.zip
      name: RiskManagement-RiskManagement.Risks
      target-path: resources
    - artifacts:
      - launchpad.zip
      name: RiskManagement-launchpad
      target-path: resources
    - artifacts:
      - RiskManagementRisks.zip
      name: RiskManagementRisks
      target-path: resources/
- name: RiskManagementRisks
  type: html5
  path: app/RiskManagement.Risks
  build-parameters:
    build-result: dist
    builder: custom
    commands:
    - npm install
    - npm run build:cf
    supported-platforms: []
resources:
- name: RiskManagement-service-uaa
  type: org.cloudfoundry.managed-service
  parameters:
    config:
      oauth2-configuration:
        redirect-uris:
        - https://*.${default-domain}/login/*
      role-collections:
      - description: RiskViewer
        name: RiskManagement-RiskViewer-${space}
        role-template-references:
        - $XSAPPNAME.RiskViewer
      - description: RiskManager
        name: RiskManagement-RiskManager-${space}
        role-template-references:
        - $XSAPPNAME.RiskManager
      tenant-mode: dedicated
      xsappname: RiskManagement-${space}
    path: xs-security.json
    service: xsuaa
    service-name: RiskManagement-uaa
    service-plan: application
- name: RiskManagement-service-db
  type: org.cloudfoundry.managed-service
  parameters:
    service: hana
    service-name: RiskManagement-db
    service-plan: hdi-shared
- name: RiskManagement-service-destination
  type: org.cloudfoundry.managed-service
  parameters:
    config:
      HTML5Runtime_enabled: true
      init_data:
        instance:
          destinations:
          - Authentication: NoAuthentication
            Name: ui5
            ProxyType: Internet
            Type: HTTP
            URL: https://ui5.sap.com
          - Authentication: NoAuthentication
            HTML5.DynamicDestination: true
            HTML5.ForwardAuthToken: true
            Name: RiskManagement-srv-api
            ProxyType: Internet
            Type: HTTP
            URL: ~{srv-api/srv-url}
          existing_destinations_policy: update
      version: 1.0.0
    service: destination
    service-name: RiskManagement-destination
    service-plan: lite
  requires:
  - name: srv-api
- name: RiskManagement-service-metadata
  type: org.cloudfoundry.user-provided-service
  parameters:
    config:
      default-domain: ${default-domain}
    service: metadata
    service-name: RiskManagement-metadata
    service-plan: standard
- name: RiskManagement-service-connectivity
  type: org.cloudfoundry.managed-service
  parameters:
    service: connectivity
    service-name: RiskManagement-connectivity
    service-plan: lite
- name: RiskManagement-service-logs
  type: org.cloudfoundry.managed-service
  parameters:
    service: application-logs
    service-name: RiskManagement-logs
    service-plan: lite
- name: RiskManagement-service-html5-apps-repo-host
  type: org.cloudfoundry.managed-service
  parameters:
    service: html5-apps-repo
    service-name: RiskManagement-html5-apps-repo-host
    service-plan: app-host
- name: RiskManagement-db
  type: com.sap.xs.hdi-container
  parameters:
    service: hana
    service-plan: hdi-shared
parameters:
  deploy_mode: html5-repo
  enable-parallel-deployments: true
build-parameters:
  before-all:
  - builder: custom
    commands:
    - rm -rf build/dist
    - mkdir -p build/dist
    - rm -rf build/ui-deployer
    - mkdir -p build/ui-deployer
  - builder: custom
    commands:
    - npm install --production
    - bash -c "cds -v | grep 'cds-dk' || npm i --production --no-save @sap/cds-dk
      @sap/mdk-tools"
    - bash -c "export PATH=$PATH:$(pwd)/node_modules/.bin"
    - cds build --production
